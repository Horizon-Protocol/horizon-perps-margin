[
    {
        "type": "constructor",
        "inputs": [
            {
                "name": "_params",
                "type": "tuple",
                "internalType": "struct IAccount.AccountConstructorParams",
                "components": [
                    {
                        "name": "factory",
                        "type": "address",
                        "internalType": "address"
                    },
                    {
                        "name": "events",
                        "type": "address",
                        "internalType": "address"
                    },
                    {
                        "name": "marginAsset",
                        "type": "address",
                        "internalType": "address"
                    },
                    {
                        "name": "perpsV2ExchangeRate",
                        "type": "address",
                        "internalType": "address"
                    },
                    {
                        "name": "futuresMarketManager",
                        "type": "address",
                        "internalType": "address"
                    },
                    {
                        "name": "systemStatus",
                        "type": "address",
                        "internalType": "address"
                    },
                    {
                        "name": "gelato",
                        "type": "address",
                        "internalType": "address"
                    },
                    {
                        "name": "automate",
                        "type": "address",
                        "internalType": "address"
                    },
                    {
                        "name": "settings",
                        "type": "address",
                        "internalType": "address"
                    }
                ]
            }
        ],
        "stateMutability": "nonpayable"
    },
    {
        "type": "receive",
        "stateMutability": "payable"
    },
    {
        "type": "function",
        "name": "VERSION",
        "inputs": [],
        "outputs": [
            {
                "name": "",
                "type": "bytes32",
                "internalType": "bytes32"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "addDelegate",
        "inputs": [
            {
                "name": "_delegate",
                "type": "address",
                "internalType": "address"
            }
        ],
        "outputs": [],
        "stateMutability": "nonpayable"
    },
    {
        "type": "function",
        "name": "automate",
        "inputs": [],
        "outputs": [
            {
                "name": "",
                "type": "address",
                "internalType": "contract IAutomate"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "checker",
        "inputs": [
            {
                "name": "_conditionalOrderId",
                "type": "uint256",
                "internalType": "uint256"
            }
        ],
        "outputs": [
            {
                "name": "canExec",
                "type": "bool",
                "internalType": "bool"
            },
            {
                "name": "execPayload",
                "type": "bytes",
                "internalType": "bytes"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "committedMargin",
        "inputs": [],
        "outputs": [
            {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "conditionalOrderId",
        "inputs": [],
        "outputs": [
            {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "dedicatedMsgSender",
        "inputs": [],
        "outputs": [
            {
                "name": "",
                "type": "address",
                "internalType": "address"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "delegates",
        "inputs": [
            {
                "name": "delegate",
                "type": "address",
                "internalType": "address"
            }
        ],
        "outputs": [
            {
                "name": "",
                "type": "bool",
                "internalType": "bool"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "execute",
        "inputs": [
            {
                "name": "_commands",
                "type": "uint8[]",
                "internalType": "enum IAccount.Command[]"
            },
            {
                "name": "_inputs",
                "type": "bytes[]",
                "internalType": "bytes[]"
            }
        ],
        "outputs": [],
        "stateMutability": "payable"
    },
    {
        "type": "function",
        "name": "executeConditionalOrder",
        "inputs": [
            {
                "name": "_conditionalOrderId",
                "type": "uint256",
                "internalType": "uint256"
            }
        ],
        "outputs": [],
        "stateMutability": "nonpayable"
    },
    {
        "type": "function",
        "name": "feesDetal",
        "inputs": [],
        "outputs": [
            {
                "name": "fee",
                "type": "uint256",
                "internalType": "uint256"
            },
            {
                "name": "feeToken",
                "type": "address",
                "internalType": "address"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "freeMargin",
        "inputs": [],
        "outputs": [
            {
                "name": "",
                "type": "uint256",
                "internalType": "uint256"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "gelato1Balance",
        "inputs": [],
        "outputs": [
            {
                "name": "",
                "type": "address",
                "internalType": "contract IGelato1Balance"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "getConditionalOrder",
        "inputs": [
            {
                "name": "_conditionalOrderId",
                "type": "uint256",
                "internalType": "uint256"
            }
        ],
        "outputs": [
            {
                "name": "",
                "type": "tuple",
                "internalType": "struct IAccount.ConditionalOrder",
                "components": [
                    {
                        "name": "marketKey",
                        "type": "bytes32",
                        "internalType": "bytes32"
                    },
                    {
                        "name": "marginDelta",
                        "type": "int256",
                        "internalType": "int256"
                    },
                    {
                        "name": "sizeDelta",
                        "type": "int256",
                        "internalType": "int256"
                    },
                    {
                        "name": "targetPrice",
                        "type": "uint256",
                        "internalType": "uint256"
                    },
                    {
                        "name": "gelatoTaskId",
                        "type": "bytes32",
                        "internalType": "bytes32"
                    },
                    {
                        "name": "conditionalOrderType",
                        "type": "uint8",
                        "internalType": "enum IAccount.ConditionalOrderTypes"
                    },
                    {
                        "name": "desiredFillPrice",
                        "type": "uint256",
                        "internalType": "uint256"
                    },
                    {
                        "name": "reduceOnly",
                        "type": "bool",
                        "internalType": "bool"
                    },
                    {
                        "name": "trackingCode",
                        "type": "bytes32",
                        "internalType": "bytes32"
                    }
                ]
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "getDelayedOrder",
        "inputs": [
            {
                "name": "_marketKey",
                "type": "bytes32",
                "internalType": "bytes32"
            }
        ],
        "outputs": [
            {
                "name": "order",
                "type": "tuple",
                "internalType": "struct IPerpsV2MarketConsolidated.DelayedOrder",
                "components": [
                    {
                        "name": "isOffchain",
                        "type": "bool",
                        "internalType": "bool"
                    },
                    {
                        "name": "sizeDelta",
                        "type": "int128",
                        "internalType": "int128"
                    },
                    {
                        "name": "desiredFillPrice",
                        "type": "uint128",
                        "internalType": "uint128"
                    },
                    {
                        "name": "targetRoundId",
                        "type": "uint128",
                        "internalType": "uint128"
                    },
                    {
                        "name": "commitDeposit",
                        "type": "uint128",
                        "internalType": "uint128"
                    },
                    {
                        "name": "keeperDeposit",
                        "type": "uint128",
                        "internalType": "uint128"
                    },
                    {
                        "name": "executableAtTime",
                        "type": "uint256",
                        "internalType": "uint256"
                    },
                    {
                        "name": "intentionTime",
                        "type": "uint256",
                        "internalType": "uint256"
                    },
                    {
                        "name": "trackingCode",
                        "type": "bytes32",
                        "internalType": "bytes32"
                    }
                ]
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "getPosition",
        "inputs": [
            {
                "name": "_marketKey",
                "type": "bytes32",
                "internalType": "bytes32"
            }
        ],
        "outputs": [
            {
                "name": "position",
                "type": "tuple",
                "internalType": "struct IPerpsV2MarketConsolidated.Position",
                "components": [
                    {
                        "name": "id",
                        "type": "uint64",
                        "internalType": "uint64"
                    },
                    {
                        "name": "lastFundingIndex",
                        "type": "uint64",
                        "internalType": "uint64"
                    },
                    {
                        "name": "margin",
                        "type": "uint128",
                        "internalType": "uint128"
                    },
                    {
                        "name": "lastPrice",
                        "type": "uint128",
                        "internalType": "uint128"
                    },
                    {
                        "name": "size",
                        "type": "int128",
                        "internalType": "int128"
                    }
                ]
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "isAuth",
        "inputs": [],
        "outputs": [
            {
                "name": "",
                "type": "bool",
                "internalType": "bool"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "isOwner",
        "inputs": [],
        "outputs": [
            {
                "name": "",
                "type": "bool",
                "internalType": "bool"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "owner",
        "inputs": [],
        "outputs": [
            {
                "name": "",
                "type": "address",
                "internalType": "address"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "removeDelegate",
        "inputs": [
            {
                "name": "_delegate",
                "type": "address",
                "internalType": "address"
            }
        ],
        "outputs": [],
        "stateMutability": "nonpayable"
    },
    {
        "type": "function",
        "name": "setInitialOwnership",
        "inputs": [
            {
                "name": "_owner",
                "type": "address",
                "internalType": "address"
            }
        ],
        "outputs": [],
        "stateMutability": "nonpayable"
    },
    {
        "type": "function",
        "name": "transferOwnership",
        "inputs": [
            {
                "name": "_newOwner",
                "type": "address",
                "internalType": "address"
            }
        ],
        "outputs": [],
        "stateMutability": "nonpayable"
    },
    {
        "type": "function",
        "name": "validLimitOrder",
        "inputs": [
            {
                "name": "_conditionalOrderId",
                "type": "uint256",
                "internalType": "uint256"
            }
        ],
        "outputs": [
            {
                "name": "",
                "type": "bool",
                "internalType": "bool"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "function",
        "name": "validStopOrder",
        "inputs": [
            {
                "name": "_conditionalOrderId",
                "type": "uint256",
                "internalType": "uint256"
            }
        ],
        "outputs": [
            {
                "name": "",
                "type": "bool",
                "internalType": "bool"
            }
        ],
        "stateMutability": "view"
    },
    {
        "type": "error",
        "name": "AccountExecutionDisabled",
        "inputs": []
    },
    {
        "type": "error",
        "name": "AddressEmptyCode",
        "inputs": [
            {
                "name": "target",
                "type": "address",
                "internalType": "address"
            }
        ]
    },
    {
        "type": "error",
        "name": "AddressInsufficientBalance",
        "inputs": [
            {
                "name": "account",
                "type": "address",
                "internalType": "address"
            }
        ]
    },
    {
        "type": "error",
        "name": "CannotExecuteConditionalOrder",
        "inputs": [
            {
                "name": "conditionalOrderId",
                "type": "uint256",
                "internalType": "uint256"
            },
            {
                "name": "executor",
                "type": "address",
                "internalType": "address"
            }
        ]
    },
    {
        "type": "error",
        "name": "CannotPayExecutorFee",
        "inputs": [
            {
                "name": "executorFee",
                "type": "uint256",
                "internalType": "uint256"
            },
            {
                "name": "executor",
                "type": "address",
                "internalType": "address"
            }
        ]
    },
    {
        "type": "error",
        "name": "EthWithdrawalFailed",
        "inputs": []
    },
    {
        "type": "error",
        "name": "FailedInnerCall",
        "inputs": []
    },
    {
        "type": "error",
        "name": "InsufficientFreeMargin",
        "inputs": [
            {
                "name": "available",
                "type": "uint256",
                "internalType": "uint256"
            },
            {
                "name": "required",
                "type": "uint256",
                "internalType": "uint256"
            }
        ]
    },
    {
        "type": "error",
        "name": "InvalidCommandType",
        "inputs": [
            {
                "name": "commandType",
                "type": "uint256",
                "internalType": "uint256"
            }
        ]
    },
    {
        "type": "error",
        "name": "InvalidDelegateAddress",
        "inputs": [
            {
                "name": "delegateAddress",
                "type": "address",
                "internalType": "address"
            }
        ]
    },
    {
        "type": "error",
        "name": "InvalidPrice",
        "inputs": []
    },
    {
        "type": "error",
        "name": "LengthMismatch",
        "inputs": []
    },
    {
        "type": "error",
        "name": "Reentrancy",
        "inputs": []
    },
    {
        "type": "error",
        "name": "SafeERC20FailedOperation",
        "inputs": [
            {
                "name": "token",
                "type": "address",
                "internalType": "address"
            }
        ]
    },
    {
        "type": "error",
        "name": "SetMinKeeperFeeFailed",
        "inputs": []
    },
    {
        "type": "error",
        "name": "TokenSwapNotAllowed",
        "inputs": [
            {
                "name": "tokenIn",
                "type": "address",
                "internalType": "address"
            },
            {
                "name": "tokenOut",
                "type": "address",
                "internalType": "address"
            }
        ]
    },
    {
        "type": "error",
        "name": "Unauthorized",
        "inputs": []
    },
    {
        "type": "error",
        "name": "ZeroSizeDelta",
        "inputs": []
    }
]